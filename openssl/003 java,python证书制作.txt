
1. java 使用jks格式
2. python 使用pem格式

keytool制作证书:

	1. 生成服务端的私钥和证书仓库
	keytool -genkey -alias server -keysize 2048 -validity 365 -keyalg RSA -dname "C=CN,ST=GuangDong,L=Shenzhen,O=xxx,OU=xxx,CN=xxx" -keypass 123456 -storepass 123456 -keystore server.jks

	2. 生成客户端的私钥和证书仓库
	keytool -genkey -alias client -keysize 2048 -validity 365 -keyalg RSA -dname "C=CN,ST=GuangDong,L=Shenzhen,O=xxx,OU=xxx,CN=xxx" -keypass 654321 -storepass 654321 -keystore client.jks

	3. 导出服务端的证书，并导入到客户端的证书仓库中（单项认证：客户端验证服务端，服务端不需要验证客户端）
	keytool -export -alias server -keystore server.jks -storepass 123456 -file server.cer
	keytool -import -trustcacerts -alias server -file server.cer -storepass 654321 -keystore client.jks


	4. 导出客户端的证书，并导入到服务端的证书仓库中（单项认证：客户端验证服务端，服务端同时验证客户端）
	keytool -export -alias client -keystore client.jks -storepass 654321 -file client.cer
	keytool -import -trustcacerts -alias client -file client.cer -storepass 123456 -keystore server.jks

	#查看jks中的证书
	keytool -list -v -keystore server.jks -storepass 123456
	keytool -list -v -keystore client.jks -storepass 654321

keytool生成的证书转换为PEM格式:
	1. JKS格式转换成PKCS12格式
	keytool -importkeystore -srcstoretype JKS -srckeystore client.jks -srcstorepass 654321 -srcalias client -srckeypass 654321 -deststoretype PKCS12 -destkeystore client.p12 -deststorepass 654321 -destalias client -destkeypass 654321

	2. 从pkcs12格式的证书中导出证书
	openssl pkcs12 -in client.p12 -passin pass:654321 -nokeys -out client.crt

	3. 从pkcs12格式的证书中导出私钥
	openssl pkcs12 -in client.p12 -passin pass:654321 -nocerts -out client.pem -passout pass:654321


openssl制作证书:
	#制作根证书
	cd /etc/pki/CA
	openssl genrsa -aes256 -out private/cakey.pem 2048 -passout pass:ca123
	openssl req -subj "/C=CN/ST=GuangDong/L=Shenzhen/O=xxx/OU=xxx/CN=xxx" -new -out cacert.csr -key private/cakey.pem
	openssl ca -selfsign -in cacert.csr -keyfile private/cakey.pem -out cacert.crt 		#后续默认使用的是名称cacert.pem
		#openssl req -new -x509 -key private/cakey.pem -out cacert.crt 					#创建证书请求并自签署

	1. 生成公钥私钥
	openssl genrsa -aes256 -out test.pem 2048 -passout pass:root123

	2. 创建证书请求
	openssl req -subj "/C=CN/ST=GuangDong/L=Shenzhen/O=xxx/OU=xxx/CN=xxx" -new -out test.csr -key test.pem

	3. 自签发证书
	openssl ca -in test.csr -keyfile private/cakey.pem -cert cacert.crt -out test.crt 	# 用CA私钥和CA证书签发
		#openssl x509 -req -in test.csr -out test.crt -outform pem -signkey test.pem -days 365

PEM格式私钥转换为jks文件:
	1. 转换为pkcs12格式
	openssl pkcs12 -export -in test.crt -inkey test.pem -out test.p12 -name test -passin pass:root123 -passout pass:root123
		-- -in : 证书
		-- -inkey: 私钥

	2. 导入到jks中
	keytool -importkeystore -srckeystore test.p12 -srcstoretype PKCS12 -srcstorepass root123 -alias test -deststorepass 654321 -destkeypass 654321 -destkeystore test.jks
		-- 会自动创建jks

jks导入pem格式的证书:
	keytool -keystore test.jks -importcert -alias test -file test.crt
